upstream app_backend {
  server app:8080;
  keepalive 16;
}

server {
  listen 80;
  server_name _;

  # (Optional but handy) add the raw path as an attribute for search/filtering
  otel_span_attr http.target $uri;

  # 1) Exact: /healthz  → show real path
  location = /healthz {
    otel_trace on;
    otel_trace_context propagate;
    otel_span_name "$request_method /healthz";

    proxy_pass http://app_backend;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
  }

  # 2) Exact: /hello  → show real path
  location = /hello {
    otel_trace on;
    otel_trace_context propagate;
    otel_span_name "$request_method /hello";

    proxy_pass http://app_backend;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
  }

  # 3) Regex: /users/{id} だけ正規化（/users/123 → /users/{id}）
  location ~ ^/users/[^/]+$ {
    otel_trace on;
    otel_trace_context propagate;
    otel_span_name "$request_method /users/{id}";

    proxy_pass http://app_backend;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
  }

  # 4) Static assets (unchanged)
  location /assets/ {
    alias /usr/share/nginx/html/;
    autoindex off;
    expires 1h;
  }

  # 5) Fallback: "/" などその他は実パスで見せる
  location / {
    otel_trace on;
    otel_trace_context propagate;
    otel_span_name "$request_method $uri";   # e.g. GET /

    proxy_pass http://app_backend;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
  }
}
